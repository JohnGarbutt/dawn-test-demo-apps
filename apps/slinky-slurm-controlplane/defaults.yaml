---
controller:
  persistence:
    storageClass: csi-cinder

#
# Slurm compute (slurmd) configurations.
compute:
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Default image for the nodeset pod (slurmd)
  # Each nodeset may override this setting.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmd
    #
    # -- (string)
    # Set the image tag to use.
    # @default -- The Release appVersion.
    tag: 24.05-ubuntu-24.04
  #
  # -- (list)
  # Slurm NodeSets by object list.
  nodesets:
      #
      # -- (string)
      # Name of NodeSet. Must be unique.
    - name: debug
      #
      # -- (bool)
      # Enables the NodeSet in Slurm.
      enabled: true
      #
      # -- (integer)
      # Set the number of replicas to deploy.
      # NOTE: if empty, all nodes matching affinity will have a replica (like DaemonSet).
      replicas: 1
      #
      # -- (int)
      # The minimum number of seconds for which a newly created NodeSet Pod should be ready
      # without any of its container crashing, for it to be considered available.
      minReadySeconds: 0
      #
      # -- (string)
      # Set the image pull policy.
      imagePullPolicy: IfNotPresent
      #
      # Set the image to use.
      image:
        #
        # -- (string)
        # Set the image repository to use.
        repository: ""
        #
        # -- (string)
        # Set the image tag to use.
        tag: ""
      #
      # -- (string)
      # Set the priority class to use.
      # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
      priorityClassName: ""
      #
      # -- (object)
      # Set container resource requests and limits for Kubernetes Pod scheduling.
      # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
      resources:
        limits:
          cpu: 1
          memory: 1Gi
      #
      # -- (map)
      # Selector which must match a node's labels for the pod to be scheduled on that node.
      nodeSelector:
        kubernetes.io/os: linux
      #
      # -- (object)
      # Set affinity for Kubernetes Pod scheduling.
      affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #       - matchExpressions:
        #           - key: "kubernetes.io/os"
        #             operator: In
        #             values:
        #               - linux
        # podAntiAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     - topologyKey: "kubernetes.io/hostname"
        #       labelSelector:
        #         matchExpressions:
        #           - key: "app.kubernetes.io/name"
        #             operator: In
        #             values:
        #               - slurmctld
        #               - slurmdbd
        #               - slurmrestd
      #
      # -- (object)
      # Set the update strategy configuration.
      updateStrategy:
        #
        # -- (string)
        # Set the update strategy type.
        # Can be either: "RollingUpdate"; "OnDelete".
        type: RollingUpdate
        #
        # -- (object)
        # Define the rolling update policy.
        # Only used when "updateStrategy.type=RollingUpdate".
        rollingUpdate:
          #
          # -- (string)
          # The maximum number of pods that can be unavailable during the update.
          # Value can be an absolute number (ex: 5) or a percentage of desired
          # pods (ex: 10%). Absolute number is calculated from percentage by
          # rounding up. This can not be 0. Defaults to 1.
          maxUnavailable: 20%
          #
          # -- (int)
          # Partition indicates the number of NodeSet pods that should be
          # not be updated to the latest version.
          partition: 0
          #
          # -- (bool)
          # Pause will halt rollingUpdate while this value is true.
          paused: false
      #
      # -- (object)
      # The policy used for PVCs created from the NodeSet VolumeClaimTemplates.
      persistentVolumeClaimRetentionPolicy:
        #
        # -- (string)
        # WhenDeleted specifies what happens to PVCs created from NodeSet
        # VolumeClaimTemplates when the NodeSet is deleted. The default policy
        # of `Retain` causes PVCs to not be affected by NodeSet deletion. The
        # `Delete` policy causes those PVCs to be deleted.
        whenDeleted: Retain
      #
      # --(list)
      # List of claims that pods are allowed to reference.
      # The NodeSet controller is responsible for mapping network identities to
      # claims in a way that maintains the identity of a pod.
      volumeClaimTemplates: []
        # - metadata:
        #     name: data
        #   spec:
        #     storageClassName: standard
        #     mountPath: /mnt/data
        #     accessModes:
        #       - ReadWriteOnce
        #     resources:
        #       requests:
        #         storage: 1Gi
      #
      # -- (object)
      # Partition describes the partition created specifically for this NodeSet to be added.
      partition:
        #
        # -- (bool)
        # Enables this NodeSet's partition line to be added in Slurm.
        enabled: true
        #
        # -- (string)
        # Extra Slurm partition configuration appended onto the partition line.
        # Ref: https://slurm.schedmd.com/slurm.conf.html#lbAI
        config: >-
          State=UP
          MaxTime=INFINITE
      #
      # -- (string)
      # Set Slurm node GRES.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Gres_1
      nodeGres: ""
      #
      # -- (list)
      # Set Slurm node Features as a list(string).
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Features
      nodeFeatures: []
      #
      # -- (string)
      # Set Slurm node weight for Slurm scheduling.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Weight
      nodeWeight: 1
  #
  # -- (list)
  # Slurm Partitions by object list.
  partitions:
      #
      # -- (string)
      # Name of Partition. Must be unique.
    - name: all
      #
      # -- (bool)
      # Enables the partition in Slurm.
      enabled: true
      #
      # -- (list)
      # NodeSets to put into this Partition by name/key.
      # NOTE: 'ALL' is a Slurm meta value to mean all nodes in the system.
      nodesets:
        - ALL
      #
      # -- (string)
      # Extra Slurm partition configuration appended onto the partition line.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#lbAI
      config: >-
        State=UP
        Default=YES
        MaxTime=INFINITE
